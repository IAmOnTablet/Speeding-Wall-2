--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.21) ~  Much Love, Ferib 

]]--

return (function(...)
	local v0 = 0 - 0;
	local v1;
	local v2;
	while true do
		if (v0 == (1379 - (1055 + 324))) then
			local v3 = 1340 - (1093 + 247);
			while true do
				if (v3 == (0 + 0)) then
					v1 = {"\053\110\074\054\053\084\061\061","\053\071\120\081\105\090\120\081\087\083\067\086\087\110\057\074","\047\055\047\085\111\110\077\106\086\071\109\088\084\108\061\061","\089\076\114\084\056\122\115\054\074\111\104\074\109\051\081\061","\122\071\086\086\122\084\061\061","\097\083\101\119\047\115\122\075\085\119\089\057\053\066\122\053\118\084\061\061","\051\065\102\108\097\108\061\061","\082\052\050\057\108\108\113\121\074\088\075\078\081\050\101\098\053\090\122\105\117\105\053\097\043\080\107\108\081\109\102\097\102\113\048\069\119\079\061\061","\102\112\108\043\116\108\061\061","\053\112\051\070\087\079\061\061","\087\071\086\086\048\079\061\061","\053\088\101\110\053\085\070\075\047\070\088\102\048\070\053\114\097\068\098\061","\078\113\098\084\067\067\078\113\121\069\076\098\073\113\109\068","\051\075\079\057\082\112\120\101\089\120\100\085\097\098\117\081","","\115\043\077\079\108\078\068\052\084\120\051\106\090\090\105\074\102\043\069\102\049\053\082\051\105\114\121\097\101\051\100\078","\068\103\055\073\065\099\122\114\077\108\061\061","\053\083\100\114\105\112\111\061","\083\074\107\103\069\105\052\088\114\078\085\061","\084\121\043\055\068\120\104\101\071\079\061\061","\105\112\084\070\118\084\061\061","\122\119\100\086\087\071\120\069\087\090\051\076","\070\098\104\077\074\043\099\053\122\111\120\117\069\108\061\061","\115\068\049\073\072\103\111\120\099\055\118\074\075\079\061\061","\097\077\088\120\120\074\053\087\051\085\107\043\108\120\086\083\067\108\061\061","\051\081\107\066\067\083\085\077\122\075\101\081\051\071\053\056\108\072\061\061","\113\054\081\118\098\081\081\111\083\113\054\043\065\098\111\061","\122\121\107\054\122\090\070\069\053\083\111\061","\048\071\120\081\082\121\107\050\082\072\061\061","\071\079\090\120\049\055\065\088\050\115\057\077\085\084\061\061","\083\081\120\113\120\079\061\061","\122\098\057\101\048\119\086\072\085\119\086\085\122\077\066\070\097\084\061\061","\082\054\109\119\122\103\088\072\098\115\081\067\043\084\061\061","\050\074\118\089\121\108\061\061","\053\071\070\086\122\121\051\117","\098\067\100\056\119\100\067\067\076\116\065\066\100\098\099\119","\048\112\120\069","\052\055\066\105\072\069\121\075\075\072\061\061","\084\078\089\100\066\083\120\077\101\110\070\055\112\084\105\100\113\054\087\116\100\103\069\101\114\069\090\055\119\043\098\110\106\110\068\108\113\068\108\072\048\102\043\099\085\050\050\067\054\085\112\086\052\080\079\116\068\070\075\076\085\047\089\106\067\110\071\111\112\056\056\112\083\109\056\112\113\101\052\088\057\072\061\061","\105\068\111\061","\083\070\107\106\053\083\067\086\122\121\088\069\105\121\085\061","\113\069\079\074\053\116\117\056\113\079\061\061","\087\071\107\054\087\071\088\081","\087\115\074\081\053\108\061\061","\103\116\102\080\120\072\117\083\072\080\101\067\084\047\083\122\080\090\118\102\115\111\121\084\111\087\075\116\113\117\108\053\112\043\118\081\074\110\109\106\079\087\122\085\057\070\072\086\105\065\108\111\053\101\122\071\122\080\070\090\107\083\115\050\043\071\097\108\069\074\053\115\089\089\090\089\043\115\066\109\102\087\084\102\108\115\121\089\049\043\101\081\066\116\067\069\108\068\102\115","\087\081\067\069\090\119\100\120\118\083\051\071\122\110\108\081\053\071\087\061","\105\068\066\061","\053\121\067\050\067\110\053\049\120\070\051\114\097\115\079\072","\121\103\110\108\104\054\111\061","\113\068\074\110\047\068\085\049\097\070\053\087\089\110\100\114","\113\079\061\061","\048\110\088\054\053\121\107\106","\105\090\088\081\082\084\061\061","\049\115\069\067\048\085\055\101\104\072\061\061","\048\110\120\106\105\112\053\074","\109\048\101\065\052\081\100\090\085\049\084\061","\070\113\087\078\073\074\087\061","\067\071\120\082\053\074\108\061","\069\073\089\054\068\072\061\061","\097\115\098\049\118\083\100\050\097\110\055\049\120\120\101\115\113\121\085\061","\113\085\051\097\089\088\051\069\067\071\051\081\087\047\088\090\108\112\089\061","\118\057\070\072\106\067\082\105\078\084\061\061","\116\079\061\061","\067\120\122\077\047\121\120\047\113\090\067\070\067\119\086\108","\082\081\053\083\048\120\088\057\122\071\078\115\108\083\111\049\087\071\108\061","\122\121\088\069\105\121\085\061","\084\056\113\069\051\099\121\098\107\084\061\061","\082\117\078\086\104\050\102\109\085\116\065\117\098\054\083\069\073\078\086\072\116\090\079\081\080\115\053\085\089\065\105\076\069\087\048\090\100\078\108\108","\120\102\080\120\052\118\082\086\066\102\097\122\090\076\106\117\079\079\102\106\078\072\061\061","\056\072\076\088\053\075\052\082\119\068\105\116","\071\065\081\069\097\115\088\078\076\106\104\099","\069\112\111\073\075\072\061\061","\047\055\073\107\049\079\061\061","\053\110\057\050\105\112\111\061","\108\081\056\070\105\085\122\101\105\110\081\077\051\110\057\113\082\079\061\061","\120\120\074\099\108\090\051\100\051\121\053\077\097\066\070\100\089\077\089\061","\113\085\120\075\097\090\120\114\087\112\101\111\082\074\084\072","\083\070\107\056\105\110\067\074\118\084\061\061","\048\071\120\081\105\090\120\081\087\083\067\086\087\110\057\074","\090\047\098\071\087\083\122\119\087\074\074\113\085\066\048\061","\051\068\051\072\120\071\067\087\053\066\122\098\051\071\057\077","\100\079\110\078\054\111\071\052\068\070\057\077\057\065\112\073\065\055\065\083\098\083\110\049\048\117\065\099\115\049\053\072\109\043\121\105\052\097\090\071\103\104\098\090\070\111\101\107\078\090\079\076\106\057\088\055\054\080\043\070\107\101\084\107\122\076\118\075\079\067\069\108\108\119\051\056\048\057\119\109\117\110\119\079\049\120\071\055\043\051\068\083\051\068\121\114\073\100\072\113","\089\068\067\108\108\098\086\049\118\090\074\090\082\077\088\113","\076\102\069\072\102\084\061\061","\089\066\107\078\105\075\098\049\118\110\056\090\085\088\108\077\108\072\061\061","\076\102\099\086\086\043\085\106\053\112\055\065","\122\121\107\077\122\119\100\056\105\110\048\061","\089\066\106\117\090\047\088\119\108\074\056\082\067\077\122\068\118\108\061\061","\090\068\101\120\082\112\120\103\090\047\053\099\097\077\087\081\097\079\061\061","\109\111\051\107\070\108\061\061","\053\120\100\081\120\090\074\090\053\081\070\106\048\077\101\077","\097\107\108\117\076\120\077\097\073\108\061\061","\048\068\074\080\105\119\101\054\120\083\120\071\122\098\074\083\087\071\087\061","\069\115\083\068\053\100\120\112\057\117\075\056\101\113\109\075\111\087\104\099\052\104\086\114\074\057\069\049\047\101\108\061","\083\070\107\103\053\090\049\061","\107\069\118\085\050\070\077\088\078\100\056\110\085\108\072\061","\120\121\088\106\048\121\120\114\111\066\067\074\122\121\120\075\122\121\120\098\111\108\061\061","\082\077\051\099\090\119\101\085\067\098\120\111\105\081\070\050\087\108\061\061","\107\098\072\103\112\072\061\061","\048\121\051\086\105\121\072\061","\087\074\056\115\090\075\122\119\051\112\088\097\053\098\087\070\053\115\108\061","\121\047\066\119\116\088\076\108","\069\082\083\107\121\108\061\061","\087\077\053\076\051\090\074\056\082\085\051\121\067\090\086\076\113\090\048\061","\048\071\120\103\053\090\051\081","\105\113\070\048\052\075\071\086\075\117\114\121","\101\118\086\054\121\081\121\098\050\081\087\050","\089\067\065\073\116\072\061\061","\083\107\078\107\111\112\056\114\074\108\089\061","\105\121\107\121\105\120\088\050\118\121\055\057\082\115\122\120\089\072\061\061","\113\057\118\114\084\108\061\061","\113\068\088\067\122\068\074\080\113\068\111\057\105\083\067\101\067\088\117\061","\113\090\049\049\048\070\051\078\047\085\070\067\082\074\088\097\051\081\089\061","\076\088\070\088\100\108\061\061","\108\072\061\061","\089\066\100\085\067\098\106\089\047\066\108\049\087\120\053\116","\050\097\088\117\084\082\113\078\086\050\076\105\078\079\108\105\054\089\089\061","\067\069\056\071\101\085\080\119\083\078\078\083\104\072\061\061","\073\056\052\074\090\101\082\108\100\080\116\109\075\080\084\076\080\108\061\061","\047\049\114\112\114\072\055\056\085\108\067\118\076\112\071\048\065\075\099\115\085\100\043\069","\105\078\118\114\082\077\111\061","\085\069\051\112\049\084\061\061","\083\104\117\088\090\052\069\067\085\070\102\115\114\080\055\061","\048\112\067\114\082\090\078\115","\083\070\107\115\087\072\061\061","\055\121\066\102\068\075\106\082\115\111\056\098\056\074\106\112\101\117\101\077\101\054\067\085\055\077\048\113\089\068\079\061","\122\053\072\113\086\084\061\061","\113\085\122\099\122\070\053\054\087\120\079\071\090\068\084\077\120\079\061\061","\105\121\120\054","\053\121\120\069\122\090\048\061","\090\088\102\079\089\086\055\097\114\079\061\061","\053\071\120\081\053\110\120\054\122\079\061\061","\053\071\120\081\082\090\078\110\105\072\061\061","\122\047\100\090\087\112\101\087\085\119\087\081\047\090\053\106","\098\068\072\086\043\051\066\051\118\105\098\061","\105\110\120\112\048\119\100\050\118\119\098\061","\122\090\078\072\087\090\051\076","\108\052\074\107\080\075\067\065\120\087\057\113\073\122\108\061","\105\084\061\061","\043\106\075\082\098\103\100\074\089\084\061\061","\107\048\082\098\102\072\061\061","\089\112\120\103\047\121\067\071\067\071\088\110\051\110\106\113\120\079\061\061","\108\090\053\121\122\074\067\097\048\071\100\043\053\119\053\090\097\108\061\061","\081\075\115\108\076\118\112\122\055\120\088\049\101\098\112\086","\113\090\082\084\118\072\061\061"};
					v2 = nil;
					v3 = 2 - 1;
				end
				if (v3 == (1 + 0)) then
					v0 = 1 + 0;
					break;
				end
			end
		end
		if (v0 == (1696 - (556 + 1139))) then
			function v2(v4)
				return v1[v4 + (-(388086 - (6 + 9)) - -409824)];
			end
			for v5, v6 in ipairs({{(507957 + 483606 + -(991731 - (28 + 141))),((1156917 - 219653) - (663715 + 273404))},{(-331956 + (1168698 - 836741)),(-(2316540 - 1583917) + (733978 - (668 + 595)))},{(-(562022 - 355934) - -(206471 - (23 + 267))),(-(252246 - (371 + 16)) + (253754 - (1326 + 424)))}}) do
				while v6[-(822934 - 388434) + (1587778 - 1153277)] < v6[-(514042 - (88 + 30)) - -(514697 - (720 + 51))] do
					v1[v6[(884902 - 487107) + -397794]], v1[v6[(505891 - (421 + 1355)) + -(831663 - 327550)]], v6[-711313 + 349408 + 361906], v6[860662 - (861743 - (286 + 797))] = v1[v6[(843968 - 613100) + -(382399 - 151533)]], v1[v6[991005 - (991443 - (397 + 42))]], v6[187678 - (58617 + 129060)] + (-249874 - -249875), v6[356140 - 356138] - (559901 - (560700 - (24 + 776)));
				end
			end
			v0 = 2 - 0;
		end
		if (v0 == (787 - (222 + 563))) then
			do
				local v7 = {M=(-(605311 - 330586) - -(197833 + 76943)),c=((8020 - (23 + 167)) + -7819),Z=((656480 - (690 + 1108)) - (236197 + 418463)),N=((422787 + 89779) - 512509),["\054"]=(-(368147 - (40 + 808)) + 367345),e=(-(25790 + 130849) - -(598992 - 442352)),D=(478153 + -(457005 + 21145)),z=(398397 + 354689 + -753057),n=(539314 + -539276),["\057"]=(290212 + 239009 + -(529743 - (47 + 524))),v=(-511459 + 511489),g=(-728353 - -(472698 + 255699)),Q=(33829 + -(92330 - 58553)),A=(-(939598 - 311231) - -(1433154 - 804756)),u=(-(508778 - (1165 + 561)) - -(15063 + 492029)),["\055"]=(-(1856356 - 1256985) - -(228715 + 370716)),U=((752843 - (341 + 138)) + -(203092 + 549252)),Y=(-952223 - -(1965175 - 1012940)),i=(-(1046355 - (89 + 237)) - -(3365163 - 2319107)),L=((242573 - 127354) + -(116057 - (581 + 300))),["\052"]=(-(678536 - (855 + 365)) + (1608920 - 931542)),q=(-45088 - -(14727 + 30375)),I=(-(319830 - (1030 + 205)) + 299157 + 19501),["\049"]=((369326 + 27686) - 396956),b=(-(113470 - (156 + 130)) + 113220),w=(563128 - 563121),["\056"]=((808280 - 452553) + -(599471 - 243785)),a=(-836296 + 836314),T=(-(1695040 - 867430) - -827610),s=(-(262108 + 732599) + 580065 + 414681),J=(709487 + -709450),k=((895068 - (10 + 59)) + -894938),o=(71873 + -(20326 + 51539)),j=(-(1257821 - 1002414) + 255452),B=(-185092 - -(186259 - (671 + 492))),R=(-(658335 + 168663) + (828239 - (369 + 846))),h=((153675 + 426796) - (495322 + 85090)),["\043"]=(-(5463 - (1036 + 909)) + 2844 + 732),d=(1046253 - (1756574 - 710330)),["\047"]=(33342 - 33323),r=(-150679 + (150932 - (11 + 192))),t=((183234 + 179352) - (362759 - (135 + 40))),X=((1807342 - 1061394) - (449626 + 296317)),K=(344171 + -344136),C=(-228796 + (504083 - 275270)),G=(-(701502 - 233554) + 468002),V=((553407 - (50 + 126)) - 553198),W=((2264605 - 1451327) + -813254),P=((228301 + 803177) - (1032881 - (1233 + 180))),f=(-(1021719 - (522 + 447)) - -(1022186 - (107 + 1314))),F=(-602261 + 602314),m=(-(15689 + 18120) + (103148 - 69297)),x=(-(422460 + 572196) + 994677),["\050"]=(-(1724207 - 855945) + (3435555 - 2567246)),p=(-300830 + 300885),O=(-(653682 - (716 + 1194)) + 11130 + 640674),l=(-(82156 + 684829) + (767504 - (74 + 429))),["\053"]=(-950025 + (1832735 - 882685)),["\051"]=(248268 + 252654 + -(1146631 - 645722)),y=(-46225 - -46231),S=(294132 - 294109),["\048"]=(691816 + 286046 + -977834),H=(-(1591808 - 1075483) + 516373),E=(-(1635037 - 973770) - -(661734 - (279 + 154)))};
				local v8 = table.insert;
				local v9 = v1;
				local v10 = table.concat;
				local v11 = math.floor;
				local v12 = string.char;
				local v13 = string.len;
				local v14 = string.sub;
				local v15 = type;
				for v47 = -(136564 - (454 + 324)) - -(106832 + 28955), #v9, -987638 - -(987656 - (12 + 5)) do
					local v48 = 0 + 0;
					local v49;
					while true do
						if (v48 == (0 - 0)) then
							v49 = v9[v47];
							if (v15(v49) == "\115\116\114\105\110\103") then
								local v230 = 0 + 0;
								local v231;
								local v232;
								local v233;
								local v234;
								local v235;
								while true do
									if (v230 == (1096 - (277 + 816))) then
										v9[v47] = v10(v232);
										break;
									end
									if (v230 == (8 - 6)) then
										v235 = 366258 + -(367441 - (1058 + 125));
										while v233 <= v231 do
											local v273 = v14(v49, v233, v233);
											local v274 = v7[v273];
											if v274 then
												local v286 = 0;
												while true do
													if (v286 == 0) then
														local v290 = 0;
														while true do
															if (v290 == (1 + 0)) then
																v286 = 976 - (815 + 160);
																break;
															end
															if (0 == v290) then
																v234 = v234 + (v274 * (((3744824 - 2872037) + -(2071721 - 1198998)) ^ ((-(47830 + 152667) + 200500) - v235)));
																v235 = v235 + ((1351259 - 888997) - (464159 - (41 + 1857)));
																v290 = 1894 - (1222 + 671);
															end
														end
													end
													if ((2 - 1) == v286) then
														if (v235 == (-723289 - -(1039682 - 316389))) then
															local v291 = 1182 - (229 + 953);
															local v292;
															local v293;
															local v294;
															while true do
																if (2 == v291) then
																	v8(v232, v12(v292, v293, v294));
																	v234 = (615902 - (1111 + 663)) - 614128;
																	break;
																end
																if (v291 == (1579 - (874 + 705))) then
																	v235 = 223525 + -223525;
																	v292 = v11(v234 / (-(62076 + 381402) + 509014));
																	v291 = 1 + 0;
																end
																if (v291 == (1 - 0)) then
																	v293 = v11((v234 % (564181 - (14034 + 484611))) / (-(671484 - (642 + 37)) - -(153009 + 518052)));
																	v294 = v234 % (103828 + 545166 + -648738);
																	v291 = 2;
																end
															end
														end
														break;
													end
												end
											elseif (v273 == "\061") then
												v8(v232, v12(v11(v234 / ((1989384 - 1197053) - (727249 - (233 + 221))))));
												if ((v233 >= v231) or (v14(v49, v233 + (102032 - 57908) + -(38836 + 5287), v233 + (-184948 - -(186490 - (718 + 823)))) ~= "\061")) then
													v8(v232, v12(v11((v234 % (-240659 - -(192678 + 113517))) / (-508114 - -(509175 - (266 + 539))))));
												end
												break;
											end
											v233 = v233 + ((2968599 - 1920080) - (1049743 - (636 + 589)));
										end
										v230 = 3;
									end
									if (v230 == (0 - 0)) then
										local v265 = 0 - 0;
										while true do
											if (0 == v265) then
												v231 = v13(v49);
												v232 = {};
												v265 = 1 + 0;
											end
											if ((1 + 0) == v265) then
												v230 = 1016 - (657 + 358);
												break;
											end
										end
									end
									if (v230 == (2 - 1)) then
										v233 = -(408422 - 229155) - -179268;
										v234 = -(243292 - (1151 + 36)) - -(233797 + 8308);
										v230 = 1 + 1;
									end
								end
							end
							break;
						end
					end
				end
			end
			return (function(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39)
				local v40 = 0;
				while true do
					if (v40 == (0 - 0)) then
						v34, v36, v38, v37, v30, v23, v33, v28, v31, v25, v24, v35, v39, v29, v32, v26, v27 = function(v51, v52)
							local v53 = 1832 - (1552 + 280);
							local v54;
							local v55;
							while true do
								local v210 = 0;
								while true do
									if ((834 - (64 + 770)) == v210) then
										if (v53 == (1 + 0)) then
											return v55;
										end
										if ((0 - 0) == v53) then
											v54 = v28(v52);
											function v55(...)
												return v32(v51, {...}, v52, v54);
											end
											v53 = 1 + 0;
										end
										break;
									end
								end
							end
						end, function(v56)
							local v57 = 1243 - (157 + 1086);
							while true do
								if (v57 == (0 - 0)) then
									v24[v56] = v24[v56] - ((306845 - 236785) - (107468 - 37409));
									if (v24[v56] == (-(160520 - 42912) - -117608)) then
										v24[v56], v25[v56] = nil, nil;
									end
									break;
								end
							end
						end, function()
							local v58 = 0;
							local v59;
							while true do
								if (v58 == (819 - (599 + 220))) then
									v59 = 0;
									while true do
										if (v59 == 0) then
											v37 = v37 + ((1293496 - 643949) - (651477 - (1813 + 118)));
											v24[v37] = 785301 + -(574038 + 211262);
											v59 = 1;
										end
										if (v59 == (1218 - (841 + 376))) then
											return v37;
										end
									end
									break;
								end
							end
						end, -(1052346 - 301340) - -(174461 + 576545), function(v60, v61)
							local v62 = v28(v61);
							local v63 = function(v211, v212, v213, v214, v215)
								return v32(v60, {v211,v212,v213,v214,v215}, v61, v62);
							end;
							return v63;
						end, function(v64, v65)
							local v66 = v28(v65);
							local v67 = function(v216, v217, v218, v219, v220, v221)
								return v32(v64, {v216,v217,v218,v219,v220,v221}, v65, v66);
							end;
							return v67;
						end, function(v68, v69)
							local v70 = 0 - 0;
							local v71;
							local v72;
							while true do
								if (v70 == (521 - (150 + 370))) then
									return v72;
								end
								if (v70 == (1282 - (74 + 1208))) then
									v71 = v28(v69);
									function v72(v239, v240, v241)
										return v32(v68, {v239,v240,v241}, v69, v71);
									end
									v70 = 1 + 0;
								end
							end
						end, function(v73)
							local v74 = 390 - (14 + 376);
							while true 
